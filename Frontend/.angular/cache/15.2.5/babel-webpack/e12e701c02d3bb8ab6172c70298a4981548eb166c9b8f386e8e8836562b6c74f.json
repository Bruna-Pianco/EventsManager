{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n    this.credentials = {\n      id: '',\n      email: '',\n      senha: ''\n    };\n    this.token = {\n      username: '',\n      password: ''\n    };\n  }\n  ngOnInit() {}\n  login() {\n    this.loginService.submit(this.credentials).subscribe(token => {\n      if (token) {\n        this.token = token, sessionStorage.setItem('token', JSON.stringify(token)), this.router.navigate(['/home']);\n      } else {\n        this.router.navigate(['/login']);\n      }\n    });\n    this.loginService.submit(this.credentials);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 10,\n  vars: 0,\n  consts: [[1, \"login-wrapper\"], [1, \"formulario\"], [\"routerLink\", \"/home\", 1, \"logo\"], [\"matInput\", \"\", \"placeholder\", \"E-mail:\", \"name\", \"email\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Senha:\", \"name\", \"senha\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"a\", 2);\n      i0.ɵɵelement(3, \"img\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-form-field\");\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-form-field\");\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_8_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(9, \" Login \");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i2.RouterLink, i3.MatButton, i4.MatFormField, i5.MatInput, i6.ɵNgNoValidate, i6.NgControlStatusGroup],\n  styles: [\".mat-focused .mat-form-field-label {\\r\\n  \\r\\n  color: #ffa500 !important;\\r\\n}\\r\\n\\r\\n  .mat-form-field-underline {\\r\\n  \\r\\n  background-color: #ffa500 !important;\\r\\n}\\r\\n\\r\\n\\r\\n  .mat-form-field-placeholder {\\r\\n  color: #ffa500;\\r\\n}\\r\\n\\r\\n  .mat-focused .mat-form-field-placeholder {\\r\\n  color: #ffa500;\\r\\n}\\r\\n\\r\\n.mat-form-field-empty.mat-form-field-label[_ngcontent-%COMP%] {\\r\\n  color: #ffa500;\\r\\n}\\r\\n\\r\\n.login-wrapper[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  min-height: 100vh;\\r\\n  background-image: url('../../../assets/img/mario.png');\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: cover;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n  flex: 0.3;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  background-color: #151d27;\\r\\n  opacity: 0.96;\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%], button[_ngcontent-%COMP%] {\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  border: 1px solid #ffa500;\\r\\n  color: #212121;\\r\\n  background-color: #ffa500;\\r\\n  transition: .3s ease-in-out;\\r\\n  margin: 20px 0px;\\r\\n}\\r\\n\\r\\nnav[_ngcontent-%COMP%] {\\r\\n  margin: 10px 0px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nnav[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\nli[_ngcontent-%COMP%] {\\r\\n  list-style-type: none;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%] {\\r\\n  text-decoration: none;\\r\\n  color: #ffa500;\\r\\n  transition: .3s ease-in-out;\\r\\n  margin: 0px 5px;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%]:hover {\\r\\n  color: #ffa500;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWNjb3VudC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0JBQXdCO0VBQ3hCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLDRCQUE0QjtFQUM1QixvQ0FBb0M7QUFDdEM7OztBQUdBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixzREFBc0Q7RUFDdEQsNEJBQTRCO0VBQzVCLHNCQUFzQjtFQUN0QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxTQUFTO0VBQ1QsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIseUJBQXlCO0VBQ3pCLGFBQWE7QUFDZjs7QUFFQTs7RUFFRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsY0FBYztFQUNkLHlCQUF5QjtFQUN6QiwyQkFBMkI7RUFDM0IsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsY0FBYztFQUNkLDJCQUEyQjtFQUMzQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcclxuICAvKmNoYW5nZSBjb2xvciBvZiBsYWJlbCovXHJcbiAgY29sb3I6ICNmZmE1MDAgIWltcG9ydGFudDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUge1xyXG4gIC8qY2hhbmdlIGNvbG9yIG9mIHVuZGVybGluZSovXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYTUwMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1wbGFjZWhvbGRlciB7XHJcbiAgY29sb3I6ICNmZmE1MDA7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLXBsYWNlaG9sZGVyIHtcclxuICBjb2xvcjogI2ZmYTUwMDtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxkLWVtcHR5Lm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcclxuICBjb2xvcjogI2ZmYTUwMDtcclxufVxyXG5cclxuLmxvZ2luLXdyYXBwZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vLi4vYXNzZXRzL2ltZy9tYXJpby5wbmcnKTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuZm9ybSB7XHJcbiAgZmxleDogMC4zO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMxNTFkMjc7XHJcbiAgb3BhY2l0eTogMC45NjtcclxufVxyXG5cclxubWF0LWZvcm0tZmllbGQsXHJcbmJ1dHRvbiB7XHJcbiAgd2lkdGg6IDgwJTtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZmZhNTAwO1xyXG4gIGNvbG9yOiAjMjEyMTIxO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmE1MDA7XHJcbiAgdHJhbnNpdGlvbjogLjNzIGVhc2UtaW4tb3V0O1xyXG4gIG1hcmdpbjogMjBweCAwcHg7XHJcbn1cclxuXHJcbm5hdiB7XHJcbiAgbWFyZ2luOiAxMHB4IDBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbm5hdiB1bCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxubGkge1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiAjZmZhNTAwO1xyXG4gIHRyYW5zaXRpb246IC4zcyBlYXNlLWluLW91dDtcclxuICBtYXJnaW46IDBweCA1cHg7XHJcbn1cclxuXHJcbmE6aG92ZXIge1xyXG4gIGNvbG9yOiAjZmZhNTAwO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;AAgBA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;IAC9D,gBAAW,GAAa;MACtBC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;KACR;IAED,UAAK,GAAW;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAC;KACV;EAVsE;EAazEC,QAAQ,IAAU;EAElBC,KAAK;IACH,IAAI,CAACR,YAAY,CAACS,MAAM,CAAC,IAAI,CAACC,WAAW,CAAC,CAACC,SAAS,CAAEC,KAAK,IAAI;MAC7D,IAAIA,KAAK,EAAE;QACR,IAAI,CAACA,KAAK,GAAGA,KAAK,EACjBC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC,EACtD,IAAI,CAACX,MAAM,CAACgB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;OAClC,MAAM;QACL,IAAI,CAAChB,MAAM,CAACgB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEpC,CAAC,CAAC;IAEF,IAAI,CAACjB,YAAY,CAACS,MAAM,CAAC,IAAI,CAACC,WAAW,CAAC;EAC5C;;AA5BWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChB3BC,8BAA2B;MAGjBA,sBAAK;MACTA,iBAAI;MACJA,sCAAgB;MACZA,2BAAoD;MACxDA,iBAAiB;MACjBA,sCAAgB;MACZA,2BAAmE;MACvEA,iBAAiB;MAEjBA,iCAA0D;MAAlBA;QAAA,OAASC,WAAO;MAAA,EAAC;MAC3DD,uBACF;MAAAA,iBAAS","names":["LoginComponent","constructor","loginService","router","id","email","senha","username","password","ngOnInit","login","submit","credentials","subscribe","token","sessionStorage","setItem","JSON","stringify","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\account\\login\\login.component.ts","C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\account\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit  } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IUsuario } from '../../models/usuario'\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ILogin } from '../../models/login.interface';\nimport { LoginService } from './login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  constructor(private loginService: LoginService, private router: Router) {}\n  credentials: IUsuario = {\n    id: '',\n    email: '',\n    senha: '',\n  };\n\n  token: ILogin = {\n      username: '',\n      password:''\n    };\n\n\n  ngOnInit(): void {}\n\n  login(): void {\n    this.loginService.submit(this.credentials).subscribe((token) => {\n      if (token) {\n        (this.token = token),\n          sessionStorage.setItem('token', JSON.stringify(token)),\n          this.router.navigate(['/home']);\n      } else {\n        this.router.navigate(['/login']);\n      }\n    });\n\n    this.loginService.submit(this.credentials);\n  }\n}\n\n\n","<div class=\"login-wrapper\">\n  <form class=\"formulario\">\n      <a routerLink=\"/home\" class=\"logo\">\n          <img>\n      </a>\n      <mat-form-field>\n          <input matInput placeholder=\"E-mail:\"  name=\"email\">\n      </mat-form-field>\n      <mat-form-field>\n          <input type='password' matInput placeholder=\"Senha:\"  name=\"senha\">\n      </mat-form-field>\n\n      <button mat-raised-button type=\"submit\" (click)=\"login()\">\n    Login\n  </button>\n  </form>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}