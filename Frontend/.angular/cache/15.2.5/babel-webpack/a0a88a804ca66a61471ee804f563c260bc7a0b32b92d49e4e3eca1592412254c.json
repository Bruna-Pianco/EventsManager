{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/grid-list\";\nimport * as i4 from \"@angular/material/card\";\nexport class DashboardComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    /** Based on the screen size, switch from standard to one column per row */\n    this.cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(({\n      matches\n    }) => {\n      if (matches) {\n        return [{\n          title: 'Card 1',\n          cols: 1,\n          rows: 1\n        }, {\n          title: 'Card 2',\n          cols: 1,\n          rows: 1\n        }, {\n          title: 'Card 3',\n          cols: 1,\n          rows: 1\n        }];\n      }\n      return [{\n        title: 'Card 1',\n        cols: 2,\n        rows: 1\n      }, {\n        title: 'Card 2',\n        cols: 1,\n        rows: 1\n      }, {\n        title: 'Card 3',\n        cols: 1,\n        rows: 1\n      }];\n    }));\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 19,\n  vars: 0,\n  consts: [[1, \"grid-container\"], [\"cols\", \"1\", \"rowHeight\", \"350px\"], [1, \"example-card\"], [\"mat-card-avatar\", \"\", 1, \"example-header-image\"], [\"mat-card-image\", \"\", \"src\", \"https://material.angular.io/assets/img/examples/shiba2.jpg\", \"alt\", \"Photo of a Shiba Inu\"], [\"mat-button\", \"\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-grid-list\", 1)(2, \"mat-grid-tile\")(3, \"mat-card\", 2)(4, \"mat-card-header\");\n      i0.ɵɵelement(5, \"div\", 3);\n      i0.ɵɵelementStart(6, \"mat-card-title\");\n      i0.ɵɵtext(7, \"Shiba Inu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-card-subtitle\");\n      i0.ɵɵtext(9, \"Dog Breed\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"img\", 4);\n      i0.ɵɵelementStart(11, \"mat-card-content\")(12, \"p\");\n      i0.ɵɵtext(13, \" The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally bred for hunting. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"mat-card-actions\")(15, \"button\", 5);\n      i0.ɵɵtext(16, \"LIKE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 5);\n      i0.ɵɵtext(18, \"SHARE\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n  },\n  dependencies: [i2.MatButton, i3.MatGridList, i3.MatGridTile, i4.MatCard, i4.MatCardActions, i4.MatCardAvatar, i4.MatCardContent, i4.MatCardHeader, i4.MatCardImage, i4.MatCardSubtitle, i4.MatCardTitle],\n  styles: [\".grid-container[_ngcontent-%COMP%] {\\n  margin: 20px;\\n}\\n\\n.dashboard-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiLmdyaWQtY29udGFpbmVyIHtcbiAgbWFyZ2luOiAyMHB4O1xufVxuXG4uZGFzaGJvYXJkLWNhcmQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTVweDtcbiAgbGVmdDogMTVweDtcbiAgcmlnaHQ6IDE1cHg7XG4gIGJvdHRvbTogMTVweDtcbn1cblxuLm1vcmUtYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDVweDtcbiAgcmlnaHQ6IDEwcHg7XG59XG5cbi5kYXNoYm9hcmQtY2FyZC1jb250ZW50IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,WAAW,QAA4B,qBAAqB;;;;;;AAOrE,OAAM,MAAOC,kBAAkB;EAoB7BC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IAnBtC;IACA,UAAK,GAAG,IAAI,CAACA,kBAAkB,CAACC,OAAO,CAACJ,WAAW,CAACK,OAAO,CAAC,CAACC,IAAI,CAC/DP,GAAG,CAAC,CAAC;MAAEQ;IAAO,CAAE,KAAI;MAClB,IAAIA,OAAO,EAAE;QACX,OAAO,CACL;UAAEC,KAAK,EAAE,QAAQ;UAAEC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAC,CAAE,EACrC;UAAEF,KAAK,EAAE,QAAQ;UAAEC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAC,CAAE,EACrC;UAAEF,KAAK,EAAE,QAAQ;UAAEC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAC,CAAE,CACtC;;MAGH,OAAO,CACL;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC,CAAE,EACrC;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC,CAAE,EACrC;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC,CAAE,CACtC;IACH,CAAC,CAAC,CACH;EAE4D;;AApBlDT,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT/BC,8BAA4B;MAKhBA,yBAAwD;MACxDA,sCAAgB;MAAAA,yBAAS;MAAAA,iBAAiB;MAC1CA,yCAAmB;MAAAA,yBAAS;MAAAA,iBAAoB;MAElDA,0BAAgH;MAChHA,yCAAkB;MAEdA,kOAGF;MAAAA,iBAAI;MAENA,yCAAkB;MACGA,qBAAI;MAAAA,iBAAS;MAChCA,kCAAmB;MAAAA,sBAAK;MAAAA,iBAAS","names":["map","Breakpoints","DashboardComponent","constructor","breakpointObserver","observe","Handset","pipe","matches","title","cols","rows","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 1 },\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"1\" rowHeight=\"350px\">\n    <mat-grid-tile>\n        <mat-card class=\"example-card\">\n          <mat-card-header>\n            <div mat-card-avatar class=\"example-header-image\"></div>\n            <mat-card-title>Shiba Inu</mat-card-title>\n            <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n          </mat-card-header>\n          <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\n          <mat-card-content>\n            <p>\n              The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n              A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n              bred for hunting.\n            </p>\n          </mat-card-content>\n          <mat-card-actions>\n            <button mat-button>LIKE</button>\n            <button mat-button>SHARE</button>\n          </mat-card-actions>\n        </mat-card>\n\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}