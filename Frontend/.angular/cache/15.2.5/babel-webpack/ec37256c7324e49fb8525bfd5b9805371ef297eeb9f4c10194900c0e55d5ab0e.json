{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/events.service\";\nimport * as i2 from \"../../../dashboard/dashboard.component\";\nexport class HomeComponent {\n  constructor(_eventService) {\n    this._eventService = _eventService;\n    this.displayedColumns = ['name', 'date', 'localizacao', 'cidade', 'custo', 'categoria', 'contato'];\n  }\n  ngOnInit() {\n    this.getEventsAll();\n  }\n  getEventsAll() {\n    this._eventService.getEventsAll().subscribe({\n      next: res => {\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.EventsService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  viewQuery: function HomeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatPaginator, 5);\n      i0.ɵɵviewQuery(MatSort, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n    }\n  },\n  decls: 1,\n  vars: 0,\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-dashboard\");\n    }\n  },\n  dependencies: [i2.DashboardComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAKA,SAAQA,YAAY,QAAO,6BAA6B;AACxD,SAAQC,OAAO,QAAO,wBAAwB;AAC9C,SAAQC,kBAAkB,QAAO,yBAAyB;;;;AAU1D,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,aAA2B;IAA3B,kBAAa,GAAbA,aAAa;IA4BjC,qBAAgB,GAAa,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAC,QAAQ,EAAC,OAAO,EAAC,WAAW,EAAC,SAAS,CAAC;EA5BlD;EAEjDC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACF,aAAa,CAACE,YAAY,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,UAAU,GAAG,IAAIT,kBAAkB,CAACQ,GAAG,CAAC;QAC7C,IAAI,CAACC,UAAU,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI;QAChC,IAAI,CAACD,UAAU,CAACE,SAAS,GAAG,IAAI,CAACA,SAAS;MAC5C,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAEAG,WAAW,CAACC,KAAY;IACtB,MAAMC,WAAW,GAAID,KAAK,CAACE,MAA2B,CAACC,KAAK;IAC5D,IAAI,CAACX,UAAU,CAACY,MAAM,GAAGH,WAAW,CAACI,IAAI,EAAE,CAACC,WAAW,EAAE;IAEzD,IAAI,IAAI,CAACd,UAAU,CAACE,SAAS,EAAE;MAC7B,IAAI,CAACF,UAAU,CAACE,SAAS,CAACa,SAAS,EAAE;;EAEzC;;AA5BWvB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAwB;EAAAC;IAAA;qBAiCb5B,YAAY;qBACZC,OAAO;;;;;;;;;;;;MCPlB4B,gCAA+B","names":["MatPaginator","MatSort","MatTableDataSource","HomeComponent","constructor","_eventService","ngOnInit","getEventsAll","subscribe","next","res","dataSource","sort","paginator","error","err","console","log","applyFilter","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","selectors","viewQuery","i0"],"sourceRoot":"","sources":["C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\components\\template\\home\\home.component.ts","C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\components\\template\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EventsService } from '../../../services/events.service';\nimport { Ievents } from '../../../models/events'\nimport { MatDialog } from '@angular/material/dialog';\nimport {AfterViewInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor(private _eventService:EventsService){}\n\n  ngOnInit(): void {\n    this.getEventsAll();\n  }\n\n  getEventsAll(){\n    this._eventService.getEventsAll().subscribe({\n      next: (res) => {\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      error:(err) => {\n        console.log(err)\n      }   \n    })\n  }    \n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  displayedColumns: string[] = ['name', 'date', 'localizacao','cidade','custo','categoria','contato'];\n  dataSource!: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n}\n","<!-- <mat-form-field>\n    <mat-label>Filtro</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Lollapalooza\" #input>\n  </mat-form-field>\n  \n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Nome </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Data </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.date | date}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"localizacao\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> localizacao </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.localizacao}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"cidade\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Cidade </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.cidade}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"custo\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Preço </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.custo | currency: 'BRL'}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"categoria\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Categoria </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.categoria}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"contato\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Contato </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.contato}} </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n      </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n  </div>\n   -->\n  <app-dashboard></app-dashboard>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}