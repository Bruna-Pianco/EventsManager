{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/usuario.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/card\";\nfunction LoginComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Por favor informe um email v\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email \\u00E9 \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Senha \\u00E9 \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obrigat\\u00F3ria\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, usuarioService, snackBar) {\n    this.formBuilder = formBuilder;\n    this.usuarioService = usuarioService;\n    this.snackBar = snackBar;\n  }\n  ngOnInit() {\n    this.criarForm();\n  }\n  criarForm() {\n    this.formLogin = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', [Validators.required]]\n    });\n  }\n  logar() {\n    if (this.formLogin.invalid) return;\n    var usuario = this.formLogin.getRawValue();\n    this.usuarioService.logar(usuario).subscribe(response => {\n      if (!response.sucesso) {\n        this.snackBar.open('Falha na autenticação', 'Usuário ou senha incorretos.', {\n          duration: 3000\n        });\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"card-login\"], [\"novalidate\", \"\", 3, \"formGroup\"], [1, \"conteudo-login\"], [\"appearance\", \"outline\", 1, \"form-field-full\"], [\"type\", \"email\", \"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"Ex. perukas@example.com\"], [4, \"ngIf\"], [\"type\", \"password\", \"matInput\", \"\", \"formControlName\", \"senha\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"color\", \"primary\", \"align\", \"end\", 1, \"full\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card-content\", 0)(1, \"mat-card\", 1)(2, \"mat-card-title\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2)(5, \"mat-card-content\", 3)(6, \"mat-form-field\", 4)(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵtemplate(10, LoginComponent_mat_error_10_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(11, LoginComponent_mat_error_11_Template, 4, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-form-field\", 4)(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Senha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵtemplate(16, LoginComponent_mat_error_16_Template, 4, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"mat-card-actions\", 8)(18, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_18_listener() {\n        return ctx.logar();\n      });\n      i0.ɵɵtext(19, \"Entrar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.formLogin);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.formLogin.get(\"email\").hasError(\"email\") && ctx.formLogin.get(\"email\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formLogin.get(\"email\").hasError(\"required\") && ctx.formLogin.get(\"email\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.formLogin.get(\"senha\").invalid && ctx.formLogin.get(\"senha\").touched);\n    }\n  },\n  dependencies: [i4.NgIf, i5.MatButton, i6.MatFormField, i6.MatLabel, i6.MatError, i7.MatInput, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i8.MatCard, i8.MatCardActions, i8.MatCardContent, i8.MatCardTitle],\n  styles: [\".container[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  height: 100%;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n.conteudo-login[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n.card-login[_ngcontent-%COMP%]{\\r\\n  width: 300px;\\r\\n  box-shadow: 10px 5px 5px rgba(0, 0, 0, 0.4);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWNjb3VudC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osMkNBQTJDO0FBQzdDIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5jb250ZXVkby1sb2dpbntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuLmNhcmQtbG9naW57XHJcbiAgd2lkdGg6IDMwMHB4O1xyXG4gIGJveC1zaGFkb3c6IDEwcHggNXB4IDVweCByZ2JhKDAsIDAsIDAsIDAuNCk7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;ICKzDC,iCAA8F;IAC5FA,wDACF;IAAAA,iBAAY;;;;;IACZA,iCAAiG;IAC/FA,8BAAQ;IAAAA,8BAAQ;IAAAA,gCAAW;IAAAA,iBAAS;;;;;IAMtCA,iCAAoF;IAAAA,6BAClF;IAAAA,8BAAQ;IAAAA,gCAAW;IAAAA,iBAAS;;;ADLxC,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,WAAwB,EACxBC,cAA8B,EAC9BC,QAAqB;IAFrB,gBAAW,GAAXF,WAAW;IACX,mBAAc,GAAdC,cAAc;IACd,aAAQ,GAARC,QAAQ;EAAiB;EAC7CC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EACAA,SAAS;IACP,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACW,KAAK,CAAC,CAAC;MACpDE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACY,QAAQ,CAAC;KAClC,CAAC;EACJ;EACAE,KAAK;IACH,IAAG,IAAI,CAACL,SAAS,CAACM,OAAO,EAAE;IAC3B,IAAIC,OAAO,GAAG,IAAI,CAACP,SAAS,CAACQ,WAAW,EAAc;IACtD,IAAI,CAACZ,cAAc,CAACS,KAAK,CAACE,OAAO,CAAC,CAACE,SAAS,CAAEC,QAAQ,IAAI;MACtD,IAAG,CAACA,QAAQ,CAACC,OAAO,EAAC;QACnB,IAAI,CAACd,QAAQ,CAACe,IAAI,CAAC,uBAAuB,EAAE,8BAA8B,EAAE;UAC1EC,QAAQ,EAAE;SACX,CAAC;;IAER,CAAC,CAAC;EACJ;;AAzBWpB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd3B1B,2CAAoC;MAEhBA,qBAAK;MAAAA,iBAAiB;MACtCA,+BAAyC;MAGxBA,qBAAK;MAAAA,iBAAY;MAC5BA,2BAA2F;MAC3FA,6EAEY;MACZA,6EAEY;MACdA,iBAAiB;MACjBA,0CAA6D;MAChDA,sBAAK;MAAAA,iBAAY;MAC5BA,4BAAwD;MACxDA,6EAEY;MACdA,iBAAiB;MAGrBA,4CAA8B;MACgCA;QAAA,OAAS2B,WAAO;MAAA,EAAC;MAAC3B,uBAAM;MAAAA,iBAAS;;;MAtBzFA,eAAuB;MAAvBA,yCAAuB;MAKXA,eAAgF;MAAhFA,yGAAgF;MAGhFA,eAAmF;MAAnFA,4GAAmF;MAOnFA,eAAsE;MAAtEA,+FAAsE","names":["Validators","i0","LoginComponent","constructor","formBuilder","usuarioService","snackBar","ngOnInit","criarForm","formLogin","group","email","required","senha","logar","invalid","usuario","getRawValue","subscribe","response","sucesso","open","duration","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\account\\login\\login.component.ts","C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\account\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IUsuario } from '../../models/usuario'\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UsuarioService } from '../../services/usuario.service'\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  formLogin: FormGroup;\n  constructor(private formBuilder: FormBuilder,\n              private usuarioService: UsuarioService,\n              private snackBar: MatSnackBar) { }\n  ngOnInit(): void {\n    this.criarForm();\n  }\n  criarForm(){\n    this.formLogin = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', [Validators.required]]\n    });\n  }\n  logar(){\n    if(this.formLogin.invalid) return;\n    var usuario = this.formLogin.getRawValue() as IUsuario;\n    this.usuarioService.logar(usuario).subscribe((response) => {\n        if(!response.sucesso){\n          this.snackBar.open('Falha na autenticação', 'Usuário ou senha incorretos.', {\n            duration: 3000\n          });\n        }\n    })\n  }\n}\n\n \n\n}\n","<mat-card-content class=\"container\">\n  <mat-card class=\"card-login\">\n    <mat-card-title>Login</mat-card-title>\n    <form [formGroup]=\"formLogin\" novalidate>\n      <mat-card-content class=\"conteudo-login\">\n        <mat-form-field appearance=\"outline\" class=\"form-field-full\">\n          <mat-label>Email</mat-label>\n          <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. perukas@example.com\">\n          <mat-error *ngIf=\"formLogin.get('email').hasError('email') && formLogin.get('email').touched\">\n            Por favor informe um email válido\n          </mat-error>\n          <mat-error *ngIf=\"formLogin.get('email').hasError('required') && formLogin.get('email').touched\">\n            Email é <strong>obrigatório</strong>\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"form-field-full\">\n          <mat-label>Senha</mat-label>\n          <input type=\"password\" matInput formControlName=\"senha\">\n          <mat-error *ngIf=\"formLogin.get('senha').invalid && formLogin.get('senha').touched\">Senha é\n            <strong>obrigatória</strong>\n          </mat-error>\n        </mat-form-field>\n      </mat-card-content>\n    </form>\n    <mat-card-actions align=\"end\">\n      <button mat-button color=\"primary\" class=\"full\" align=\"end\" (click)=\"logar()\">Entrar</button>\n    </mat-card-actions>\n  </mat-card>\n</mat-card-content>\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}