{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nlet EventsReadComponent = class EventsReadComponent {\n  constructor(_eventService) {\n    this._eventService = _eventService;\n    this.displayedColumns = ['name', 'date', 'localizacao', 'cidade', 'custo', 'categoria', 'contato'];\n  }\n  ngOnInit() {\n    this.getEventsAll();\n  }\n  getEventsAll() {\n    this._eventService.getEventsAll().subscribe({\n      next: res => {\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n};\n__decorate([ViewChild(MatPaginator)], EventsReadComponent.prototype, \"paginator\", void 0);\n__decorate([ViewChild(MatSort)], EventsReadComponent.prototype, \"sort\", void 0);\nEventsReadComponent = __decorate([Component({\n  selector: 'app-events-read',\n  templateUrl: './events-read.component.html',\n  styleUrls: ['./events-read.component.css']\n})], EventsReadComponent);\nexport { EventsReadComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAAuBC,SAAS,QAAO,eAAe;AACtD,SAAQC,YAAY,QAAO,6BAA6B;AACxD,SAAQC,OAAO,QAAO,wBAAwB;AAC9C,SAAQC,kBAAkB,QAAO,yBAAyB;AAOnD,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAE9BC,YAAoBC,aAA2B;IAA3B,kBAAa,GAAbA,aAAa;IA4BjC,qBAAgB,GAAa,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAC,QAAQ,EAAC,OAAO,EAAC,WAAW,EAAC,SAAS,CAAC;EA5BlD;EAEjDC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACF,aAAa,CAACE,YAAY,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,UAAU,GAAG,IAAIT,kBAAkB,CAACQ,GAAG,CAAC;QAC7C,IAAI,CAACC,UAAU,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI;QAChC,IAAI,CAACD,UAAU,CAACE,SAAS,GAAG,IAAI,CAACA,SAAS;MAC5C,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAEAG,WAAW,CAACC,KAAY;IACtB,MAAMC,WAAW,GAAID,KAAK,CAACE,MAA2B,CAACC,KAAK;IAC5D,IAAI,CAACX,UAAU,CAACY,MAAM,GAAGH,WAAW,CAACI,IAAI,EAAE,CAACC,WAAW,EAAE;IAEzD,IAAI,IAAI,CAACd,UAAU,CAACE,SAAS,EAAE;MAC7B,IAAI,CAACF,UAAU,CAACE,SAAS,CAACa,SAAS,EAAE;;EAEzC;CAQD;AAH0BC,YAAxB5B,SAAS,CAACC,YAAY,CAAC,sDAA0B;AAC9B2B,YAAnB5B,SAAS,CAACE,OAAO,CAAC,iDAAgB;AAlCxBE,mBAAmB,eAL/BL,SAAS,CAAC;EACT8B,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACW3B,mBAAmB,CAoC/B;SApCYA,mBAAmB","names":["Component","ViewChild","MatPaginator","MatSort","MatTableDataSource","EventsReadComponent","constructor","_eventService","ngOnInit","getEventsAll","subscribe","next","res","dataSource","sort","paginator","error","err","console","log","applyFilter","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\components\\events-read\\events-read.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EventsService } from '../../../services/events.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport {AfterViewInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-events-read',\n  templateUrl: './events-read.component.html',\n  styleUrls: ['./events-read.component.css']\n})\nexport class EventsReadComponent implements OnInit {\n\n  constructor(private _eventService:EventsService){}\n\n  ngOnInit(): void {\n    this.getEventsAll();\n  }\n\n  getEventsAll(){\n    this._eventService.getEventsAll().subscribe({\n      next: (res) => {\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      error:(err) => {\n        console.log(err)\n      }   \n    })\n  }    \n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  displayedColumns: string[] = ['name', 'date', 'localizacao','cidade','custo','categoria','contato'];\n  dataSource!: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}