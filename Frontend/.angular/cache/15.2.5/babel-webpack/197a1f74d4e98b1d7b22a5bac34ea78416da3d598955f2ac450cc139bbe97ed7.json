{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints } from '@angular/cdk/layout';\nlet DashboardComponent = class DashboardComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    /** Based on the screen size, switch from standard to one column per row */\n    this.cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(({\n      matches\n    }) => {\n      if (matches) {\n        return [{\n          title: 'Card 1',\n          cols: 1,\n          rows: 1\n        }, {\n          title: 'Card 2',\n          cols: 1,\n          rows: 1\n        }, {\n          title: 'Card 3',\n          cols: 1,\n          rows: 1\n        }];\n      }\n      return [{\n        title: 'Card 1',\n        cols: 1,\n        rows: 1\n      }, {\n        title: 'Card 2',\n        cols: 1,\n        rows: 2\n      }, {\n        title: 'Card 3',\n        cols: 1,\n        rows: 1\n      }];\n    }));\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,GAAG,QAAQ,gBAAgB;AACpC,SAASC,WAAW,QAA4B,qBAAqB;AAO9D,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAoB7BC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IAnBtC;IACA,UAAK,GAAG,IAAI,CAACA,kBAAkB,CAACC,OAAO,CAACJ,WAAW,CAACK,OAAO,CAAC,CAACC,IAAI,CAC/DP,GAAG,CAAC,CAAC;MAAEQ;IAAO,CAAE,KAAI;MAClB,IAAIA,OAAO,EAAE;QACX,OAAO,CACL;UAAEC,KAAK,EAAE,QAAQ;UAAEC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAC,CAAE,EACrC;UAAEF,KAAK,EAAE,QAAQ;UAAEC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAC,CAAE,EACrC;UAAEF,KAAK,EAAE,QAAQ;UAAEC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAC,CAAE,CACtC;;MAGH,OAAO,CACL;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC,CAAE,EACrC;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC,CAAE,EACrC;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC,CAAE,CACtC;IACH,CAAC,CAAC,CACH;EAE4D;CAC9D;AArBYT,kBAAkB,eAL9BH,SAAS,CAAC;EACTa,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWZ,kBAAkB,CAqB9B;SArBYA,kBAAkB","names":["Component","map","Breakpoints","DashboardComponent","constructor","breakpointObserver","observe","Handset","pipe","matches","title","cols","rows","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 1, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 2 },\n        { title: 'Card 3', cols: 1, rows: 1 },\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}