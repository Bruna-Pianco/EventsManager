{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../login/login.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (sessionStorage.getItem('token')) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n};\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,gBAAgB;EAC3BC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;EAAY;EAE1EC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC;MACjC,OAAO,IAAI;;IAGb,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChC,OAAO,KAAK;EACd;;AAVWT,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAU,SAAhBV,gBAAgB;EAAAW,YAHf;AAAM","names":["AuthGuardService","constructor","loginService","router","canActivate","route","state","sessionStorage","getItem","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\account\\shared\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router'\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../login/login.service'\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuardService implements CanActivate{\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n    if(sessionStorage.getItem('token')){\n      return true;\n    }\n\n    this.router.navigate(['/login']);\n    return false;\n  }\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}