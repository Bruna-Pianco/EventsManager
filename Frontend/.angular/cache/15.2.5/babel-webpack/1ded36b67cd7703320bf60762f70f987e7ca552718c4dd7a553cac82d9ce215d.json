{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/usuario.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nexport class LoginComponent {\n  constructor(formBuilder, usuarioService, snackBar) {\n    this.formBuilder = formBuilder;\n    this.usuarioService = usuarioService;\n    this.snackBar = snackBar;\n  }\n  ngOnInit() {\n    this.criarForm();\n  }\n  criarForm() {\n    this.formLogin = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', [Validators.required]]\n    });\n  }\n  logar() {\n    if (this.formLogin.invalid) return;\n    var usuario = this.formLogin.getRawValue();\n    this.usuarioService.logar(usuario).subscribe(response => {\n      if (!response.sucesso) {\n        this.snackBar.open('Falha na autenticação', 'Usuário ou senha incorretos.', {\n          duration: 3000\n        });\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 1,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"h5\");\n    }\n  },\n  styles: [\".container[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  height: 100%;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n.conteudo-login[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n.card-login[_ngcontent-%COMP%]{\\r\\n  width: 300px;\\r\\n  box-shadow: 10px 5px 5px rgba(0, 0, 0, 0.4);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWNjb3VudC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osMkNBQTJDO0FBQzdDIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5jb250ZXVkby1sb2dpbntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuLmNhcmQtbG9naW57XHJcbiAgd2lkdGg6IDMwMHB4O1xyXG4gIGJveC1zaGFkb3c6IDEwcHggNXB4IDVweCByZ2JhKDAsIDAsIDAsIDAuNCk7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAWnE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,WAAwB,EACxBC,cAA8B,EAC9BC,QAAqB;IAFrB,gBAAW,GAAXF,WAAW;IACX,mBAAc,GAAdC,cAAc;IACd,aAAQ,GAARC,QAAQ;EAAiB;EAEjCC,QAAQ;IAClB,IAAI,CAACC,SAAS,EAAE;EAClB;EACAA,SAAS;IACP,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACW,QAAQ,CAAC;KAClC,CAAC;EACJ;EACAE,KAAK;IACH,IAAG,IAAI,CAACL,SAAS,CAACM,OAAO,EAAE;IAC3B,IAAIC,OAAO,GAAG,IAAI,CAACP,SAAS,CAACQ,WAAW,EAAc;IACtD,IAAI,CAACZ,cAAc,CAACS,KAAK,CAACE,OAAO,CAAC,CAACE,SAAS,CAAEC,QAAQ,IAAI;MACtD,IAAG,CAACA,QAAQ,CAACC,OAAO,EAAC;QACnB,IAAI,CAACd,QAAQ,CAACe,IAAI,CAAC,uBAAuB,EAAE,8BAA8B,EAAE;UAC1EC,QAAQ,EAAE;SACX,CAAC;;IAER,CAAC,CAAC;EACJ;;AA1BWpB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;EAAAC;EAAAC;IAAA;MCd3BC,qBAEK","names":["Validators","LoginComponent","constructor","formBuilder","usuarioService","snackBar","ngOnInit","criarForm","formLogin","group","email","required","senha","logar","invalid","usuario","getRawValue","subscribe","response","sucesso","open","duration","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\account\\login\\login.component.ts","C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\account\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit  } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IUsuario } from '../../models/usuario'\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UsuarioService } from '../../services/usuario.service'\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  formLogin!: FormGroup\n  constructor(private formBuilder: FormBuilder,\n              private usuarioService: UsuarioService,\n              private snackBar: MatSnackBar) { }\n \n              ngOnInit(): void {\n    this.criarForm();\n  }\n  criarForm(): void{\n    this.formLogin = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', [Validators.required]]\n    });\n  }\n  logar(){\n    if(this.formLogin.invalid) return;\n    var usuario = this.formLogin.getRawValue() as IUsuario;\n    this.usuarioService.logar(usuario).subscribe((response) => {\n        if(!response.sucesso){\n          this.snackBar.open('Falha na autenticação', 'Usuário ou senha incorretos.', {\n            duration: 3000\n          });\n        }\n    })\n  }\n}\n","<h5>\n  \n</h5>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}