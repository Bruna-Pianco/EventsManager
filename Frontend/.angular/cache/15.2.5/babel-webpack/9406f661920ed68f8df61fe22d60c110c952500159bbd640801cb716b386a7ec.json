{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/grid-list\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/menu\";\nfunction DashboardComponent_mat_grid_tile_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 3)(1, \"mat-card\", 4)(2, \"mat-card-header\")(3, \"mat-card-title\")(4, \"mat-card\", 5)(5, \"mat-card-header\");\n    i0.ɵɵelement(6, \"div\", 6);\n    i0.ɵɵelementStart(7, \"mat-card-title\");\n    i0.ɵɵtext(8, \"Shiba Inu\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-card-subtitle\");\n    i0.ɵɵtext(10, \"Dog Breed\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(11, \"img\", 7);\n    i0.ɵɵelementStart(12, \"mat-card-content\")(13, \"p\");\n    i0.ɵɵtext(14, \" The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally bred for hunting. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"mat-card-actions\")(16, \"button\", 8);\n    i0.ɵɵtext(17, \"LIKE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 8);\n    i0.ɵɵtext(19, \"SHARE\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"button\", 9)(21, \"mat-icon\");\n    i0.ɵɵtext(22, \"more_vert\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"mat-menu\", 10, 11)(25, \"button\", 12);\n    i0.ɵɵtext(26, \"Expand\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"button\", 12);\n    i0.ɵɵtext(28, \"Remove\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(29, \"mat-card-content\", 13)(30, \"div\");\n    i0.ɵɵtext(31, \"Card Content Here\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    const _r2 = i0.ɵɵreference(24);\n    i0.ɵɵproperty(\"colspan\", card_r1.cols)(\"rowspan\", card_r1.rows);\n    i0.ɵɵadvance(20);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r2);\n  }\n}\nexport class DashboardComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    /** Based on the screen size, switch from standard to one column per row */\n    this.cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(({\n      matches\n    }) => {\n      if (matches) {\n        return [{\n          title: 'Card 1',\n          cols: 1,\n          rows: 1\n        }, {\n          title: 'Card 2',\n          cols: 1,\n          rows: 1\n        }, {\n          title: 'Card 3',\n          cols: 1,\n          rows: 1\n        }];\n      }\n      return [{\n        title: 'Card 1',\n        cols: 2,\n        rows: 1\n      }, {\n        title: 'Card 2',\n        cols: 1,\n        rows: 1\n      }, {\n        title: 'Card 3',\n        cols: 1,\n        rows: 1\n      }];\n    }));\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[1, \"grid-container\"], [\"cols\", \"2\", \"rowHeight\", \"350px\"], [3, \"colspan\", \"rowspan\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"], [1, \"dashboard-card\"], [1, \"example-card\"], [\"mat-card-avatar\", \"\", 1, \"example-header-image\"], [\"mat-card-image\", \"\", \"src\", \"https://material.angular.io/assets/img/examples/shiba2.jpg\", \"alt\", \"Photo of a Shiba Inu\"], [\"mat-button\", \"\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Toggle menu\", 1, \"more-button\", 3, \"matMenuTriggerFor\"], [\"xPosition\", \"before\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\"], [1, \"dashboard-card-content\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-grid-list\", 1);\n      i0.ɵɵtemplate(2, DashboardComponent_mat_grid_tile_2_Template, 32, 3, \"mat-grid-tile\", 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx.cards));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.MatIcon, i4.MatButton, i4.MatIconButton, i5.MatGridList, i5.MatGridTile, i6.MatCard, i6.MatCardActions, i6.MatCardAvatar, i6.MatCardContent, i6.MatCardHeader, i6.MatCardImage, i6.MatCardSubtitle, i6.MatCardTitle, i7.MatMenu, i7.MatMenuItem, i7.MatMenuTrigger, i2.AsyncPipe],\n  styles: [\".grid-container[_ngcontent-%COMP%] {\\n  margin: 20px;\\n}\\n\\n.dashboard-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiLmdyaWQtY29udGFpbmVyIHtcbiAgbWFyZ2luOiAyMHB4O1xufVxuXG4uZGFzaGJvYXJkLWNhcmQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTVweDtcbiAgbGVmdDogMTVweDtcbiAgcmlnaHQ6IDE1cHg7XG4gIGJvdHRvbTogMTVweDtcbn1cblxuLm1vcmUtYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDVweDtcbiAgcmlnaHQ6IDEwcHg7XG59XG5cbi5kYXNoYm9hcmQtY2FyZC1jb250ZW50IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,WAAW,QAA4B,qBAAqB;;;;;;;;;;;ICAjEC,wCAA8F;IAMlFA,yBAAwD;IACxDA,sCAAgB;IAAAA,yBAAS;IAAAA,iBAAiB;IAC1CA,yCAAmB;IAAAA,0BAAS;IAAAA,iBAAoB;IAElDA,0BAAgH;IAChHA,yCAAkB;IAEdA,kOAGF;IAAAA,iBAAI;IAENA,yCAAkB;IACGA,qBAAI;IAAAA,iBAAS;IAChCA,kCAAmB;IAAAA,sBAAK;IAAAA,iBAAS;IAGrCA,kCAAgG;IACpFA,0BAAS;IAAAA,iBAAW;IAEhCA,yCAA6C;IACrBA,uBAAM;IAAAA,iBAAS;IACrCA,mCAAsB;IAAAA,uBAAM;IAAAA,iBAAS;IAI3CA,6CAAiD;IAC1CA,kCAAiB;IAAAA,iBAAM;;;;;IAjCgBA,sCAAqB;IAuBnBA,gBAA0B;IAA1BA,uCAA0B;;;ADhBlF,OAAM,MAAOC,kBAAkB;EAoB7BC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IAnBtC;IACA,UAAK,GAAG,IAAI,CAACA,kBAAkB,CAACC,OAAO,CAACL,WAAW,CAACM,OAAO,CAAC,CAACC,IAAI,CAC/DR,GAAG,CAAC,CAAC;MAAES;IAAO,CAAE,KAAI;MAClB,IAAIA,OAAO,EAAE;QACX,OAAO,CACL;UAAEC,KAAK,EAAE,QAAQ;UAAEC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAC,CAAE,EACrC;UAAEF,KAAK,EAAE,QAAQ;UAAEC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAC,CAAE,EACrC;UAAEF,KAAK,EAAE,QAAQ;UAAEC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAC,CAAE,CACtC;;MAGH,OAAO,CACL;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC,CAAE,EACrC;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC,CAAE,EACrC;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC,CAAE,CACtC;IACH,CAAC,CAAC,CACH;EAE4D;;AApBlDT,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT/Bf,8BAA4B;MAExBA,wFAoCgB;;MAClBA,iBAAgB;;;MArCkBA,eAAgB;MAAhBA,yDAAgB","names":["map","Breakpoints","i0","DashboardComponent","constructor","breakpointObserver","observe","Handset","pipe","matches","title","cols","rows","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\bruna\\OneDrive\\Área de Trabalho\\ProjetoEventsManager\\Frontend\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 1 },\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-card class=\"example-card\">\n              <mat-card-header>\n                <div mat-card-avatar class=\"example-header-image\"></div>\n                <mat-card-title>Shiba Inu</mat-card-title>\n                <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n              </mat-card-header>\n              <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\n              <mat-card-content>\n                <p>\n                  The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n                  A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n                  bred for hunting.\n                </p>\n              </mat-card-content>\n              <mat-card-actions>\n                <button mat-button>LIKE</button>\n                <button mat-button>SHARE</button>\n              </mat-card-actions>\n            </mat-card>\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n              <button mat-menu-item>Expand</button>\n              <button mat-menu-item>Remove</button>\n            </mat-menu>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div>Card Content Here</div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}